<div class="page-width page-content reg-page-content">
						<div class="form-account-login-line">
						<!-- LINE BUTTON Start -->
						<div class="socialplus-login-button-component">
							<a id="loginLineURL" class="" href="">
								<svg width="280" height="44" viewBox="0 0 280 44" fill="white" xmlns="http://www.w3.org/2000/svg" class="socialplus-login-button-image">
									<rect width="280" height="44" rx="8.063" fill="#06C755"></rect>
									<path d="M38.1371 19.7159C38.1371 12.5013 30.8922 6.61768 21.9987 6.61768C13.1052 6.61768 5.86035 12.4862 5.86035 19.7159C5.86035 26.1894 11.6078 31.6042 19.3518 32.6327C19.8812 32.7537 20.5921 32.9806 20.7736 33.4343C20.94 33.8427 20.8795 34.4779 20.819 34.8863C20.819 34.8863 20.6223 36.0207 20.5921 36.2627C20.5165 36.6711 20.2745 37.8508 21.9836 37.1399C23.7078 36.4139 31.2703 31.6647 34.6583 27.7776C37.0027 25.2063 38.1371 22.6048 38.1371 19.7159Z" fill="white"></path>
									<path d="M32.7678 23.8904H28.2455C28.0791 23.8904 27.943 23.7543 27.943 23.5879V16.5548C27.943 16.3884 28.0791 16.2523 28.2455 16.2523H32.7678C32.9342 16.2523 33.0703 16.3884 33.0703 16.5548V17.7043C33.0703 17.8707 32.9342 18.0068 32.7678 18.0068H29.6823V19.2017H32.7678C32.9342 19.2017 33.0703 19.3378 33.0703 19.5042V20.6537C33.0703 20.8201 32.9342 20.9562 32.7678 20.9562H29.6823V22.1511H32.7678C32.9342 22.1511 33.0703 22.2872 33.0703 22.4536V23.6031C33.0703 23.7543 32.9342 23.8904 32.7678 23.8904Z" fill="#06C755"></path>
									<path d="M15.994 23.8905C16.1604 23.8905 16.2965 23.7544 16.2965 23.588V22.4385C16.2965 22.2721 16.1604 22.136 15.994 22.136H12.9085V16.5398C12.9085 16.3734 12.7724 16.2373 12.606 16.2373H11.4565C11.2901 16.2373 11.154 16.3734 11.154 16.5398V23.5729C11.154 23.7393 11.2901 23.8754 11.4565 23.8754H15.994V23.8905Z" fill="#06C755"></path>

									<path d="M18.7162 16.2373H17.5667C17.4003 16.2373 17.2642 16.3734 17.2642 16.5398V23.588C17.2642 23.7544 17.4003 23.8905 17.5667 23.8905H18.7162C18.8825 23.8905 19.0187 23.7544 19.0187 23.588V16.5398C19.0338 16.3734 18.8977 16.2373 18.7162 16.2373Z" fill="#06C755"></path>

									<path d="M26.5059 16.2373H25.3564C25.1901 16.2373 25.0539 16.3734 25.0539 16.5398V20.7294L21.8323 16.3734C21.8323 16.3583 21.8172 16.3583 21.8021 16.3431L21.7869 16.328L21.7718 16.3129C21.7718 16.3129 21.7718 16.3129 21.7567 16.3129L21.7416 16.2978C21.7416 16.2978 21.7416 16.2978 21.7264 16.2978C21.7264 16.2978 21.7113 16.2978 21.7113 16.2826C21.7113 16.2826 21.7113 16.2826 21.6962 16.2826C21.6962 16.2826 21.6811 16.2826 21.6811 16.2675C21.6811 16.2675 21.6811 16.2675 21.6659 16.2675H21.6508C21.6508 16.2675 21.6508 16.2675 21.6357 16.2675H21.6206H21.6054H21.5903H21.5752C21.5752 16.2675 21.5752 16.2675 21.5601 16.2675H20.4257C20.2593 16.2675 20.1232 16.4036 20.1232 16.57V23.6183C20.1232 23.7846 20.2593 23.9208 20.4257 23.9208H21.5752C21.7416 23.9208 21.8777 23.7846 21.8777 23.6183V19.4438L25.0993 23.7998C25.1144 23.83 25.1447 23.8603 25.1749 23.8754L25.1901 23.8905C25.1901 23.8905 25.1901 23.8905 25.2052 23.8905H25.2203H25.2354C25.2354 23.8905 25.2354 23.8905 25.2506 23.8905H25.2657C25.2959 23.8905 25.3111 23.9056 25.3413 23.9056H26.4757C26.6421 23.9056 26.7782 23.7695 26.7782 23.6031V16.5549C26.8236 16.3734 26.6874 16.2373 26.5059 16.2373Z" fill="#06C755">
									</path><path opacity="0.08" d="M46.2 0H44V44H46.2V0Z" fill="black"></path>
									<text x="155" y="28" text-anchor="middle">Sign up with LINE</text>
								</svg>
							</a>
						</div>
						<!-- LINE BUTTON End -->

						<!--  LINE CONNECTION INDICATOR Start -->
						<div class="socialplus-login-button-component">
							<svg width="280" height="44" viewBox="0 0 280 44" fill="white" xmlns="http://www.w3.org/2000/svg" class="socialplus-login-button-image">
								<rect id="lineConnectionColor" width="280" height="44" rx="8.063" fill="#808080"></rect>
								<path d="M38.1371 19.7159C38.1371 12.5013 30.8922 6.61768 21.9987 6.61768C13.1052 6.61768 5.86035 12.4862 5.86035 19.7159C5.86035 26.1894 11.6078 31.6042 19.3518 32.6327C19.8812 32.7537 20.5921 32.9806 20.7736 33.4343C20.94 33.8427 20.8795 34.4779 20.819 34.8863C20.819 34.8863 20.6223 36.0207 20.5921 36.2627C20.5165 36.6711 20.2745 37.8508 21.9836 37.1399C23.7078 36.4139 31.2703 31.6647 34.6583 27.7776C37.0027 25.2063 38.1371 22.6048 38.1371 19.7159Z" fill="white"></path>
								<path d="M32.7678 23.8904H28.2455C28.0791 23.8904 27.943 23.7543 27.943 23.5879V16.5548C27.943 16.3884 28.0791 16.2523 28.2455 16.2523H32.7678C32.9342 16.2523 33.0703 16.3884 33.0703 16.5548V17.7043C33.0703 17.8707 32.9342 18.0068 32.7678 18.0068H29.6823V19.2017H32.7678C32.9342 19.2017 33.0703 19.3378 33.0703 19.5042V20.6537C33.0703 20.8201 32.9342 20.9562 32.7678 20.9562H29.6823V22.1511H32.7678C32.9342 22.1511 33.0703 22.2872 33.0703 22.4536V23.6031C33.0703 23.7543 32.9342 23.8904 32.7678 23.8904Z" fill="#06C755"></path>
								<path d="M15.994 23.8905C16.1604 23.8905 16.2965 23.7544 16.2965 23.588V22.4385C16.2965 22.2721 16.1604 22.136 15.994 22.136H12.9085V16.5398C12.9085 16.3734 12.7724 16.2373 12.606 16.2373H11.4565C11.2901 16.2373 11.154 16.3734 11.154 16.5398V23.5729C11.154 23.7393 11.2901 23.8754 11.4565 23.8754H15.994V23.8905Z" fill="#06C755"></path>

								<path d="M18.7162 16.2373H17.5667C17.4003 16.2373 17.2642 16.3734 17.2642 16.5398V23.588C17.2642 23.7544 17.4003 23.8905 17.5667 23.8905H18.7162C18.8825 23.8905 19.0187 23.7544 19.0187 23.588V16.5398C19.0338 16.3734 18.8977 16.2373 18.7162 16.2373Z" fill="#06C755"></path>

								<path d="M26.5059 16.2373H25.3564C25.1901 16.2373 25.0539 16.3734 25.0539 16.5398V20.7294L21.8323 16.3734C21.8323 16.3583 21.8172 16.3583 21.8021 16.3431L21.7869 16.328L21.7718 16.3129C21.7718 16.3129 21.7718 16.3129 21.7567 16.3129L21.7416 16.2978C21.7416 16.2978 21.7416 16.2978 21.7264 16.2978C21.7264 16.2978 21.7113 16.2978 21.7113 16.2826C21.7113 16.2826 21.7113 16.2826 21.6962 16.2826C21.6962 16.2826 21.6811 16.2826 21.6811 16.2675C21.6811 16.2675 21.6811 16.2675 21.6659 16.2675H21.6508C21.6508 16.2675 21.6508 16.2675 21.6357 16.2675H21.6206H21.6054H21.5903H21.5752C21.5752 16.2675 21.5752 16.2675 21.5601 16.2675H20.4257C20.2593 16.2675 20.1232 16.4036 20.1232 16.57V23.6183C20.1232 23.7846 20.2593 23.9208 20.4257 23.9208H21.5752C21.7416 23.9208 21.8777 23.7846 21.8777 23.6183V19.4438L25.0993 23.7998C25.1144 23.83 25.1447 23.8603 25.1749 23.8754L25.1901 23.8905C25.1901 23.8905 25.1901 23.8905 25.2052 23.8905H25.2203H25.2354C25.2354 23.8905 25.2354 23.8905 25.2506 23.8905H25.2657C25.2959 23.8905 25.3111 23.9056 25.3413 23.9056H26.4757C26.6421 23.9056 26.7782 23.7695 26.7782 23.6031V16.5549C26.8236 16.3734 26.6874 16.2373 26.5059 16.2373Z" fill="#06C755">
								</path><path opacity="0.08" d="M46.2 0H44V44H46.2V0Z" fill="black"></path>

								<text id="lineConnectionText" x="155" y="28" text-anchor="middle">Not Connected</text>
							</svg>
						</div>
					</div>
  <div class="form-container">
		<header class="section-header">
			<h1 class="section-header__title">{{ 'customer.register.title' | t }}</h1>
		</header>

		<!-- FORM Start -->
		<div class="form-vertical">
			{%- form 'create_customer' -%}

			{{ form.errors | default_errors }}
			<input type="text" class="parallel" id="line_user_id" name="customer[line_user_id]" style="display:none;" hidden>

			<div class="field-wrap">
				<input type="text" name="customer[first_name]" id="FirstName" class="field-input input-full parallel"{% if form.first_name %} value="{{ form.first_name }}"{% endif %} autocapitalize="words" placeholder="First Name *" autofocus required>
				<input type="text" name="customer[last_name]" id="LastName" class="field-input input-full parallel"{% if form.last_name %} value="{{ form.last_name }}"{% endif %} autocapitalize="words" placeholder="Last Name *" required>
			</div>
			<div class="field-wrap">
				<input type="number" name="customer[metafields][custom][telephone]" id="Telephone" class="field-input input-full" value="{{ customer.metafields.custom.telephone }}" max="9999999999" maxlength="10" placeholder="Telephone *" onfocus="(this.type='number')" onblur="(this.type='text')" required>
				<div class="field-wrap">
					<input type="date" name="birthdate" id="Birthdate" class="field-input field-input-date input-full" placeholder="Birthdate *" onfocus="(this.type='date')" required>
					<div class="field-select">
						<select id="Gender" name="gender" class="field-input input-full" required>
							<option value="" disabled selected hidden>Gender *</option>
							<option value="Male">Male</option>
							<option value="Female">Female</option>
							<option value="Others">Others</option>
						</select>
					</div>
				</div>
			</div>
			<div class="field-wrap">
				<input type="text" name="shop_name" id="Shop-name" class="field-input input-full" maxlength="50" placeholder="Shop Name *"  required>
				<input type="number" name="branch_number" id="Branch-number" class="field-input input-full" max="99" maxlength="2" placeholder="Branch No" onfocus="(this.type='number')" onblur="(this.type='text')" required>
			</div>
			<div class="field-radio field-radio-hor">
				<label>Shop Group *</label>
				<div class="field-radio-wrap">
					<div class="field-radio-child">
						<input type="radio" name="shop_group" id="Shop-group" class="input-full Shop-group" value="Food Vendor" required>
						<span>Food Vendor</span>
					</div>
					<div class="field-radio-child">
						<input type="radio" name="shop_group" id="Shop-group" class="input-full Shop-group" value="Retailer" required>
						<span>Retailer</span>
					</div>
				</div>
			</div>
			<div id="Shop-group-retailer" style="display: none;">
				<label>Shop Type *</label>
				<input type="checkbox" name="shop_type" class="input-full" value="Beverage store"> <span>Beverage store</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="Candy and snack store"> <span>Candy and snack store</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="Condiment store"> <span>Condiment store</span><br>
			</div>
			<div id="Shop-group-fv">
				<label>Shop Type *</label>
				<input type="checkbox" name="shop_type" class="input-full" value="A la carte shop"> <span>A la carte shop</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="Rice and curry restaurant"> <span>Rice and curry restaurant</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="Isaan restaurant"> <span>Isaan restaurant</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="Yum restaurant"> <span>Yum restaurant</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="Noodle shop"> <span>Noodle shop</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="Others"> <span>Others</span><br>
			</div>
			<div>
				<input type="text" name="address" id="Address" class="field-input input-full" autocomplete="on" placeholder="Address *" required>
			</div>
			<div class="field-wrap">
				<input type="text" name="district" id="District" class="field-input input-full" autocomplete="on" placeholder="District">
				<input type="text" name="sub-district" id="Sub-district" class="field-input input-full" autocomplete="on" placeholder="Sub District">
			</div>
			<div class="field-wrap">
				<input type="text" name="postal-code" id="Postal-code" class="field-input input-full" autocomplete="on" placeholder="Postal Code">
				<div class="field-select">
					<select id="Province" name="provinces" class="field-input input-full" required>
						<option value="" disabled selected hidden>Province</option>
						<option value="Bangkok">Bangkok</option>
						<option value="Amnat Charoen">Amnat Charoen</option>
						<option value="Ang Thong">Ang Thong</option>
						<option value="Bueng Kan">Bueng Kan</option>
						<option value="Buriram">Buriram</option>
						<option value="Chachoengsao">Chachoengsao</option>
						<option value="Chai Nat">Chai Nat</option>
						<option value="Chaiyaphum">Chaiyaphum</option>
						<option value="Chanthaburi">Chanthaburi</option>
						<option value="Chiang Mai">Chiang Mai</option>
						<option value="Chiang Rai">Chiang Rai</option>
						<option value="Chonburi">Chonburi</option>
						<option value="Chumphon">Chumphon</option>
						<option value="Kalasin">Kalasin</option>
						<option value="Kamphaeng Phet">Kamphaeng Phet</option>
						<option value="Kanchanaburi">Kanchanaburi</option>
						<option value="Khon Kaen">Khon Kaen</option>
						<option value="Krabi">Krabi</option>
						<option value="Lampang">Lampang</option>
						<option value="Lamphun">Lamphun</option>
						<option value="Loei">Loei</option>
						<option value="Lopburi">Lopburi</option>
						<option value="Mae Hong Son">Mae HongSon</option>
						<option value="Maha Sarakham">Maha Sarakham</option>
						<option value="Mukdahan">Mukdahan</option>
						<option value="Nakhon Nayok">Nakhon Nayok</option>
						<option value="Nakhon Pathom">Nakhon Pathom</option>
						<option value="Nakhon Phanom">Nakhon Phanom</option>
						<option value="Nakhon Ratchasima">Nakhon Ratchasima</option>
						<option value="Nakhon Sawan">Nakhon Sawan</option>
						<option value="Nakhon Si Thammarat">Nakhon Si Thammarat</option>
						<option value="Nan">Nan</option>
						<option value="Narathiwat">Narathiwat</option>
						<option value="Nong Bua Lamphu">Nong Bua Lamphu</option>
						<option value="Nong Khai">Nong Khai</option>
						<option value="Nonthaburi">Nonthaburi</option>
						<option value="Pathum Thani">Pathum Thani</option>
						<option value="Pattani">Pattani</option>
						<option value="Phang Nga">Phang Nga</option>
						<option value="Phatthalung">Phatthalung</option>
						<option value="Phayao">Phayao</option>
						<option value="Phetchabun">Phetchabun</option>
						<option value="Phetchaburi">Phetchaburi</option>
						<option value="Phichit">Phichit</option>
						<option value="Phitsanulok">Phitsanulok</option>
						<option value="Phra Nakhon Si Ayutthaya">PhraNakhonSiAyutthaya</option>
						<option value="Phrae">Phrae</option>
						<option value="Phuket">Phuket</option>
						<option value="Prachinburi">Prachinburi</option>
						<option value="Prachuap Khiri Khan">Prachuap Khiri Khan</option>
						<option value="Ranong">Ranong</option>
						<option value="Ratchaburi">Ratchaburi</option>
						<option value="Rayong">Rayong</option>
						<option value="Roi Et">Roi Et</option>
						<option value="Sa Kaeo">Sa Kaeo</option>
						<option value="Sakon Nakhon">Sakon Nakhon</option>
						<option value="Samut Prakan">Samut Prakan</option>
						<option value="Samut Sakhon">Samut Sakhon</option>
						<option value="Samut Songkhram">Samut Songkhram</option>
						<option value="Saraburi">Saraburi</option>
						<option value="Satun">Satun</option>
						<option value="SingBuri">SingBuri</option>
						<option value="Sisaket">Sisaket</option>
						<option value="Songkhla">Songkhla</option>
						<option value="Sukhothai">Sukhothai</option>
						<option value="Suphan Buri">Suphan Buri</option>
						<option value="Surat Thani">Surat Thani</option>
						<option value="Surin">Surin</option>
						<option value="Tak">Tak</option>
						<option value="Trang">Trang</option>
						<option value="Trat">Trat</option>
						<option value="Ubon Ratchathani">Ubon Ratchathani</option>
						<option value="Udon Thani">Udon Thani</option>
						<option value="Uthai Thani">Uthai Thani</option>
						<option value="Uttaradit">Uttaradit</option>
						<option value="Yala">Yala</option>
						<option value="Yasothon">Yasothon</option>
					</select>
				</div>
			</div>
			<div class="field-wrap">
				<input type="email" name="customer[email]" id="Email" class="field-input input-full parallel {% if form.errors contains 'email' %} error{% endif %}"{% if form.email %} value="{{ form.email }}"{% endif %} autocorrect="off" autocapitalize="off" placeholder="Email Address">
				<input type="password" name="customer[password]" id="CreatePassword" class="field-input field-input-pass input-full parallel {% if form.errors contains 'password' %} error{% endif %}" placeholder="Password">
			</div>
			<div class="field-wrap">
				<input type="text" name="salesman-code" id="Salesman-code" class="field-input input-full" autocomplete="on" placeholder="Salesman Code">
			</div>

			<div id="Shop-group-retailer-main" style="display: none;">
				<label>Main umami seasoning usage </label>
				<input type="checkbox" name="shop_type" class="input-full" value="Ajinomoto"> <span>Ajinomoto</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="ThaiChuros"> <span>ThaiChuros</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="Aro"> <span>Aro</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="Others"> <span>Others</span><br>
			</div>

			<div id="Shop-group-fv-main" style="display: none;">
				<label>Main flavor seasoning usage </label>
				<input type="checkbox" name="shop_type" class="input-full" value="Rosdee"> <span>Rosdee</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="FahThai"> <span>FahThai</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="Knorr"> <span>Knorr</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="Termthip"> <span>Termthip</span><br>
				<input type="checkbox" name="shop_type" class="input-full" value="Others"> <span>Others</span><br>
			</div>

			<section class="form-account">
				<p class="form-account-text">Already have an account? <span>Login here</span></p>
				<div class="form-account-login">
					<div class="form-account-login-create">
						<label for="register-submit" class="hidden-label">{{ 'customer.register.submit' | t }}</label>
						<input type="submit" id="register-submit" value="{{ 'customer.register.submit' | t }}" class="btn btn--full login-create-btn">
					</div>
				</div>
			</section>

			{%- endform -%}
		</div>
	</div>
</div>
<!-- FORM End -->

  <script>
    const group1 = document.getElementsByName('shop_group');
    const options1 = document.getElementById('Shop-group-retailer-main');
    const options2 = document.getElementById('Shop-group-fv-main');

    function toggleOptions() {
      if (group1[0].checked) {
        options1.style.display = 'block';
        options2.style.display = 'block';
      } else if (group1[1].checked) {
        options1.style.display = 'none';
        options2.style.display = 'none';
      }
    }

    group1.forEach((radio) => {
      radio.addEventListener('change', toggleOptions);
    });
  </script>

  <script>
    const group1a = document.getElementsByName('shop_group');
    const options1a = document.getElementById('Shop-group-fv');
    const options2a = document.getElementById('Shop-group-retailer');

    function toggleOptions() {
      if (group1a[0].checked) {
        options1a.style.display = 'block';
        options2a.style.display = 'none';
      } else if (group1[1].checked) {
        options1a.style.display = 'none';
        options2a.style.display = 'block';
      }
    }

    group1a.forEach((radio) => {
      radio.addEventListener('change', toggleOptions);
    });
  </script>




<script>
 // Line Functions

        // Line Functions

        // Handle form submission
        const handleFormSubmission = async (event) => {
            event.preventDefault();
            event.stopImmediatePropagation();

            const parallelRegistration = await submitFormWithApiAndShopify();

            if (parallelRegistration === 1) {
                event.target.submit();
            } else {
                // Handle the case where the registration failed
            }
        };



        // Set Line Login URL
        const setLineLoginURL = () => {
            const loginLineURL = document.getElementById('loginLineURL');
            fetch('https://ajinomoto.tcapdm.com//api/line/login/getlink?mode=login', {
                    method: 'POST',
                    body: JSON.stringify({
                        mode: 'register'
                    }),
                    headers: {
                        'Content-Type': 'application/json'
                    },
                })
                .then((response) => {
                    if (!response.ok) {
                        throw new Error('API request failed');
                    }
                    return response.json();
                })
                .then((data) => {
                    if (data.results) {
                        loginLineURL.href = data.results;
                    }
                })
                .catch((error) => {
                    console.error(error);
                    alert('Failed to get login URL');
                });
        };
        setLineLoginURL();


        async function fetchLineId() {
            try {
                const queryString = window.location.search;
                const urlParams = new URLSearchParams(queryString);
                const code = urlParams.get('code');
                if (!code) {
                    return;
                }
                const apiUrl = `https://ajinomoto.tcapdm.com/api/register/line/fetch_line_id?code=${code}`;
                const response = await fetch(apiUrl);
                if (!response.ok) {
                    throw new Error('Failed to fetch Line ID');
                }
                const data = await response.json();
                const lineUserId = document.getElementById('line_user_id');
                lineUserId.value = data.results.user_id;
                const lineConnectionText = document.getElementById('lineConnectionText');
                lineConnectionText.innerHTML = 'Connected';
                const lineConnectionColor = document.getElementById("lineConnectionColor");
                lineConnectionColor.setAttribute("fill", "#06C755");
            } catch (error) {
                console.error(error);
                alert('Failed to fetch Line ID');
            }
        }

        fetchLineId();



        // Submit form with API and Shopify
        const submitFormWithApiAndShopify = async () => {
            const form = document.getElementById('create_customer');
            const formData = new FormData(form);
            const parallelFields = [];

            const parallelElems = document.querySelectorAll('.parallel');
            const inputs = document.getElementsByClassName("input-full");

            parallelElems.forEach((elem) => {
                const fieldName = elem.getAttribute('name');
                if (fieldName.startsWith('customer[') && fieldName.endsWith(']')) {
                    const customerField = fieldName.substring(9, fieldName.length - 1);
                    const value = elem.value;
                    parallelFields.push({
                        [customerField]: value
                    });
                }
            });

            const obj = parallelFields.reduce((acc, curr) => ({
                ...acc,
                ...curr
            }), {});
            const selectedRadio = document.querySelector('input[name="shop_group"]:checked');
            if (selectedRadio) {
                obj['account_type'] = selectedRadio.value;
            }

            try {
                const response = await fetch('https://ajinomoto.tcapdm.com/api/shopify_account', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(obj),
                });
                const data = await response.json();
                if (data.status === 'error') {
                    throw new Error(data.message);
                }
                return 1;
            } catch (error) {
                console.error('Error:', error);
                return 0;
            }
        };



</script>


