{% if customer.metafields.custom.customer_type == "food_vendor" %}
  <div class="yotpo-widget-instance" data-yotpo-instance-id="537747" id="yotpo-widget-1"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="626951" id="yotpo-widget-2"></div>
  
  <div class="yotpo-widget-instance" data-yotpo-instance-id="537749"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="527520"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="527521"></div>
{% elsif customer.metafields.custom.customer_type == "retailer" %}
  <div class="yotpo-widget-instance" data-yotpo-instance-id="537747" id="yotpo-widget-1"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="626951" id="yotpo-widget-2"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="537749"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="527520"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="537723"></div>
{% endif %}|


<script>
function reloadPointsBalanceTags() {
  const targetTags = document.querySelectorAll('.yotpo-points-balance-number');

  if (targetTags.length > 0) {
    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.addedNodes.length > 0 || mutation.removedNodes.length > 0) {
          // Delay of 3.5 seconds before reloading
          setTimeout(() => {
            targetTags.forEach(tag => {
              tag.textContent = ''; // Clear content instead of reloading (if applicable)
              console.log(`Tag with class "yotpo-points-balance-number" content updated at ${new Date().toLocaleString()}`);
            });
          }, 3500);
        }
      });
    });

    // Start observing for changes within the target tags
    targetTags.forEach(tag => observer.observe(tag, { childList: true }));
  } else {
    console.warn('Tags with class "yotpo-points-balance-number" not found.');
  }
}

// Call the function to start monitoring and updating
reloadPointsBalanceTags();


  const observer = new MutationObserver(() => {
  console.log("DOM change detected");

    reloadSpecificTag();
});

observer.observe(document, { childList: true, subtree: true });


</script>

