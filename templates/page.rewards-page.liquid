{% if customer.metafields.custom.customer_type == "food_vendor" %}
  <div id="yotpo-widgets-points-container">
    <div class="yotpo-widget-instance" data-yotpo-instance-id="537747" id="yotpo-widget-1"></div>
  
    <div class="yotpo-widget-instance" data-yotpo-instance-id="626951" id="yotpo-widget-2"></div>
  </div>
  <div id="yotpo-widgets-container">
    <div class="yotpo-widget-instance" data-yotpo-instance-id="537749"></div>
    <div class="yotpo-widget-instance" data-yotpo-instance-id="527520"></div>
    <div class="yotpo-widget-instance" data-yotpo-instance-id="527521"></div>
  </div>
{% elsif customer.metafields.custom.customer_type == "retailer" %}
  <div class="yotpo-widget-instance" data-yotpo-instance-id="537747" id="yotpo-widget-1"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="626951" id="yotpo-widget-2"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="537749"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="527520"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="537723"></div>
{% endif %}|


<script>
const container = document.getElementById('yotpo-widgets-points-container');

const observer = new MutationObserver((mutations) => {
  // Process mutations (optional):
  // - Log details for debugging
  // - Check for specific mutation types/targets if needed
  // - Only trigger reload if necessary

  // Reload content (replace with your actual reload logic):
  console.log(`Mutation detected in yotpo-widgets-points-container. Reloading content...`);
  reloadContent();
});

observer.observe(container, { childList: true, subtree: true });

function reloadContent() {
  // Your specific implementation to reload the content (e.g., AJAX requests, DOM manipulation)
  // Consider using a dedicated function to separate concerns and improve readability

  // Example using AJAX (replace with your API/data source):
  fetch('/api/reload-yotpo-points')
    .then(response => response.json())
    .then(data => {
      // Update the container's content with the fetched data
      container.innerHTML = data.content; // Adapt this line based on your data structure
    })
    .catch(error => console.error('Error reloading content:', error));
}
</script>

