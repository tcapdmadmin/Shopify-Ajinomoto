{% if customer.metafields.custom.customer_type == "food_vendor" %}
  <div class="yotpo-widget-instance" data-yotpo-instance-id="537747" id="yotpo-widget-1"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="626951" id="yotpo-widget-2"></div>
  
  <div class="yotpo-widget-instance" data-yotpo-instance-id="537749"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="527520"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="527521"></div>
{% elsif customer.metafields.custom.customer_type == "retailer" %}
  <div class="yotpo-widget-instance" data-yotpo-instance-id="537747" id="yotpo-widget-1"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="626951" id="yotpo-widget-2"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="537749"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="527520"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="537723"></div>
{% endif %}|


<script>
function reloadSpecificTag() {
  const targetTag = document.querySelector('.yotpo-widget-instance[data-yotpo-instance-id="626951"]');

  if (targetTag) {
    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.addedNodes.length > 0 || mutation.removedNodes.length > 0) {
          // Delay of 3.5 seconds before reloading
          setTimeout(() => {
            targetTag.src = targetTag.src; // Reload by resetting src
            console.log(`Tag with class "yotpo-widget-instance" and data-yotpo-instance-id="626951" reloaded successfully at ${new Date().toLocaleString()}`);
          }, 3500);
        }
      });
    });

    // Start observing for changes within the target tag
    observer.observe(targetTag, { childList: true });
  } else {
    console.warn('Tag with class "yotpo-widget-instance" and data-yotpo-instance-id="626951" not found.');
  }
}

// Call the function to start monitoring and reloading
reloadSpecificTag();

// Call the function to start monitoring and reloading
reloadYotpoWidget();

  const observer = new MutationObserver(() => {
  console.log("DOM change detected");
});

observer.observe(document, { childList: true, subtree: true });


</script>

