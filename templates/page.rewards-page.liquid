{% if customer.metafields.custom.customer_type == "food_vendor" %}
  <div class="yotpo-widget-instance" data-yotpo-instance-id="537747"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="626951"></div>
  
  <div class="yotpo-widget-instance" data-yotpo-instance-id="537749"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="527520"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="527521"></div>
{% elsif customer.metafields.custom.customer_type == "retailer" %}
  <div class="yotpo-widget-instance" data-yotpo-instance-id="537747"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="626951"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="537749"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="527520"></div>

  <div class="yotpo-widget-instance" data-yotpo-instance-id="537723"></div>
{% endif %}|


<script>
  // Option 1: Add logs directly to functions
  // function reloadWidget() {
  //   console.log("Function reloadWidget called");
  //   // ... rest of the function code ...
  // }

  // // Option 2: Wrap functions in a logging function
  function logAndRun(func) {
    console.log("Function", func.name, "called");
    func();
  }

  const pointsBalanceSpan = document.querySelector('.yotpo-points-balance-number');
  const yotpoWidgetDiv = document.querySelector('.yotpo-widget-instance[data-yotpo-instance-id="626951"]');

  // Choose one of the following options:
  
  // Option 1 (uncomment the function)
  // function reloadWidget() {
  //   console.log("Function reloadWidget called");
  //   yotpoWidgetDiv.contentWindow.location.reload(true); // Reload the widget's iframe
  // }

  // Option 2 (use logAndRun)
  const reloadWidgetWithLogging = logAndRun(function() {
    yotpoWidgetDiv.contentWindow.location.reload(true); // Reload the widget's iframe
  });

  // // Listen for DOMSubtreeModified events (for older browsers)
  // pointsBalanceSpan.addEventListener('DOMSubtreeModified', reloadWidgetWithLogging);

  // Listen for MutationObserver events (for modern browsers)
  const observer = new MutationObserver(reloadWidgetWithLogging);
  observer.observe(pointsBalanceSpan, { childList: true, subtree: true });
</script>

